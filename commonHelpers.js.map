{"version":3,"file":"commonHelpers.js","sources":["../src/main.js"],"sourcesContent":["import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nconst gallery = document.querySelector('.gallery');\nconst form = document.querySelector('form');\nconst loader = document.querySelector('.loader');\n\nfunction getImages() {\n    const key = '42692774-4141696abcbee76e8cc433895';\n    const BASE_URL = 'https://pixabay.com/api/';\n    const q = form.input.value;\n    const image_type = 'photo';\n    const orientation = 'horizontal';\n    const safesearch = 'true';\n    const per_page = 42;\n    const LINK = `${BASE_URL}?key=${key}&q=${q}&per_page=${per_page}&image_type=${image_type}&orientation=${orientation}&safesearch=${safesearch}`;\n    return fetch(LINK)\n        .then(response => {\n            if (!response.ok) {\n            throw new Error('Image error!')\n            }\n            return response.json()\n        })\n        .catch(error => {\n            alert('Error while fetching images from pixabay!')\n        })  \n        .then(data => {\n            const images = data.hits;\n            if (images.length === 0) {\n                iziToast.show({\n                    transitionIn: 'fadeInLeft',\n                    transitionOut: 'fadeOutRight',\n                    position: 'topRight',\n                    messageColor: 'white',\n                    backgroundColor: 'rgba(255, 110, 110, 1)',\n                    message: 'Sorry, there are no images matching your search query. Please try again!'\n                })\n            };\n            gallery.innerHTML = images.map(({ webformatURL, tags, largeImageURL, likes, views, comments, downloads }) => {\n                return `<li class = \"gallery-item\">\n                    <a class=\"gallery-link\" href=${largeImageURL}> \n                        <img\n                        src=\"${webformatURL}\" \n                        class=\"gallery-image\"\n                        alt=\"${tags}\"\n                        />\n                    </a>\n                    <div class=\"description\">\n                        <div class=\"field\">\n                        <span class=\"label\"><b>Likes</b></span>\n                        <span class=\"value\">${likes}</span>\n                        </div>\n                        <div  class=\"field\">\n                        <span class=\"label\"><b>Views</b></span>\n                        <span class=\"value\">${views}</span>\n                        </div>\n                        <div  class=\"field\">\n                        <span class=\"label\"><b>Comments</b></span>\n                        <span class=\"value\">${comments}</span>\n                        </div>\n                        <div  class=\"field\">\n                        <span class=\"label\"><b>Downloads</b></span>\n                        <span class=\"value\">${downloads}</span>\n                        </div>\n                    </div>\n                    \n                </li>`\n            }).join(\"\");\n             loader.classList.add(\"isInvisible\");\n        })\n  \n};\n\n\nform.addEventListener('submit', (event) => {\n    event.preventDefault();\n    if (form.input.value !== \"\") {\n        getImages();\n        loader.classList.remove(\"isInvisible\");\n        const lightbox = new SimpleLightbox('.gallery a', { captionsData: 'alt' });\n        lightbox.refresh();\n    } else if (form.input.value === \"\") {\n        loader.classList.add(\"isInvisible\");\n        alert(\"Fill out the search input!\");\n    };\n});\n\n\n\n\n// import iziToast from \"izitoast\";\n// import \"izitoast/dist/css/iziToast.min.css\";\n// import SimpleLightbox from \"simplelightbox\";\n// import 'simplelightbox/dist/simple-lightbox.min.css';\n\n// const gallery = document.querySelector(\".gallery\");\n// const form = document.querySelector(\".form\");\n\n\n// const key = '42692774-4141696abcbee76e8cc433895';\n// const BASE_URL = 'https://pixabay.com/api/';\n// const q = form.input.value;\n// const image_type = 'photo';\n// const orientation = 'horizontal';\n// const safesearch = 'true';\n// const per_page = 40;\n\n// function getImages() {\n    \n//     return fetch(`${BASE_URL}?key=${key}&q=${q}&per_page=${per_page}&image_type=${image_type}&orientation=${orientation}&safesearch=${safesearch}`)\n//     .then(response => {\n//             if (!response.ok) {\n//             throw new Error('Image error!')\n//             }\n//             return response.json()\n//         })\n//         .catch(error => {\n//             alert('Error while fetching images from pixabay!')\n//         }) \n// } \n\n// getImages().then(data => {\n//     const images = data.hits;\n//     if (images.length === 0) {\n//         iziToast.show({\n//             transitionIn: 'fadeInLeft',\n//             transitionOut: 'fadeOutRight',\n//             position: 'topRight',\n//             messageColor: 'white',\n//             backgroundColor: 'rgba(255, 110, 110, 1)',\n//             message: 'Sorry, there are no images matching your search query. Please try again!'\n//         })\n//     };\n\n//     gallery.innerHTML= images.map(({ webformatURL, tags, largeImageURL, likes, views, comments, downloads }) => {\n//             return `<li class = \"gallery-item\">\n//                     <a class=\"gallery-link\" href=${largeImageURL}> \n//                         <img\n//                         src=\"${webformatURL}\" \n//                         class=\"gallery-image\"\n//                         alt=\"${tags}\"\n//                         />\n//                     </a>\n//                     <label>Likes</label>\n//                         <p>${likes}</p>\n//                     <label>Views</label>\n//                         <p>${views}</p>\n//                     <label>Comments</label>\n//                         <p>${comments}</p>\n//                     <label>Downloads</label>\n//                         <p>${downloads}</p>\n//                 </li>`\n//         }).join(\"\")\n// });\n\n// form.addEventListener('submit', (event) => {\n//     event.preventDefault();\n//     getImages();   \n    \n// })\n// const lightbox = new SimpleLightbox('.gallery a', { captionsData: 'alt' });"],"names":["gallery","form","loader","getImages","key","BASE_URL","q","LINK","response","error","data","images","iziToast","webformatURL","tags","largeImageURL","likes","views","comments","downloads","event","SimpleLightbox"],"mappings":"6vBAKA,MAAMA,EAAU,SAAS,cAAc,UAAU,EAC3CC,EAAO,SAAS,cAAc,MAAM,EACpCC,EAAS,SAAS,cAAc,SAAS,EAE/C,SAASC,GAAY,CACjB,MAAMC,EAAM,qCACNC,EAAW,2BACXC,EAAIL,EAAK,MAAM,MAKfM,EAAO,GAAGF,CAAQ,QAAQD,CAAG,MAAME,CAAC,uEAC1C,OAAO,MAAMC,CAAI,EACZ,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACd,MAAM,IAAI,MAAM,cAAc,EAE9B,OAAOA,EAAS,KAAM,CAClC,CAAS,EACA,MAAMC,GAAS,CACZ,MAAM,2CAA2C,CAC7D,CAAS,EACA,KAAKC,GAAQ,CACV,MAAMC,EAASD,EAAK,KAChBC,EAAO,SAAW,GAClBC,EAAS,KAAK,CACV,aAAc,aACd,cAAe,eACf,SAAU,WACV,aAAc,QACd,gBAAiB,yBACjB,QAAS,0EAC7B,CAAiB,EAELZ,EAAQ,UAAYW,EAAO,IAAI,CAAC,CAAE,aAAAE,EAAc,KAAAC,EAAM,cAAAC,EAAe,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,CAAS,IAC3F;AAAA,mDAC4BJ,CAAa;AAAA;AAAA,+BAEjCF,CAAY;AAAA;AAAA,+BAEZC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAMWE,CAAK;AAAA;AAAA;AAAA;AAAA,8CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,8CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,8CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,sBAK1C,EAAE,KAAK,EAAE,EACTjB,EAAO,UAAU,IAAI,aAAa,CAC/C,CAAS,CAET,CAGAD,EAAK,iBAAiB,SAAWmB,GAAU,CACvCA,EAAM,eAAc,EAChBnB,EAAK,MAAM,QAAU,IACrBE,IACAD,EAAO,UAAU,OAAO,aAAa,EACpB,IAAImB,EAAe,aAAc,CAAE,aAAc,KAAK,CAAE,EAChE,QAAO,GACTpB,EAAK,MAAM,QAAU,KAC5BC,EAAO,UAAU,IAAI,aAAa,EAClC,MAAM,4BAA4B,EAE1C,CAAC"}