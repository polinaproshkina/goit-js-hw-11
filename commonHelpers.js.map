{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["export default async function getImages(searchQuery, currentPage) {\n    const key = '42692774-4141696abcbee76e8cc433895';\n    const BASE_URL = 'https://pixabay.com/api/';\n    const image_type = 'photo';\n    const orientation = 'horizontal';\n    const safesearch = 'true';\n    const perPage = 15;\n   return fetch(`${BASE_URL}?key=${key}&q=${searchQuery}&page=${currentPage}&per_page=${perPage}&image_type=${image_type}&orientation=${orientation}&safesearch=${safesearch}`)\n        .then(response => {\n            if (!response.ok) {\n            throw new Error('Image error!')\n            }\n            return response.json()\n        })\n        .catch(error => {\n            alert('Error while fetching images from pixabay!')\n        })  \n};","import {gallery, lightbox}  from \"../main\";\n\nexport default function galleryMarkUp(images) {\n    const markup= images\n        .map(\n            ({ webformatURL, tags, largeImageURL, likes, views, comments, downloads }) => {\n                return`<li class = \"gallery-item\">\n                    <a class=\"gallery-link\" href=${largeImageURL}>\n                        <img\n                        src=\"${webformatURL}\"\n                        class=\"gallery-image\"\n                        alt=\"${tags}\"\n                        />\n                    </a>\n                    <div class=\"description\">\n                        <div class=\"field\">\n                        <span class=\"label\"><b>Likes</b></span>\n                        <span class=\"value\">${likes}</span>\n                        </div>\n                        <div  class=\"field\">\n                        <span class=\"label\"><b>Views</b></span>\n                        <span class=\"value\">${views}</span>\n                        </div>\n                        <div  class=\"field\">\n                        <span class=\"label\"><b>Comments</b></span>\n                        <span class=\"value\">${comments}</span>\n                        </div>\n                        <div  class=\"field\">\n                        <span class=\"label\"><b>Downloads</b></span>\n                        <span class=\"value\">${downloads}</span>\n                        </div>\n                    </div>\n                    \n                </li>`\n  }).join(\"\");\n    gallery.insertAdjacentHTML(\"beforeend\", markup);\n    lightbox.refresh();\n}\n","import iziToast from \"izitoast\";\nimport \"izitoast/dist/css/iziToast.min.css\";\nimport SimpleLightbox from \"simplelightbox\";\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport getImages from './js/pixabay-api';\nimport galleryMarkUp from './js/render-functions';\n\nexport const lightbox = new SimpleLightbox('.gallery a', { captionsData: 'alt' });\n\nconst searchform = document.querySelector(\".form\");\nconst loader = document.querySelector(\".loader\");\nexport const gallery = document.querySelector(\".gallery\");\n\nlet currentPage;\nlet searchQuery;\n\nsearchform.addEventListener('submit', async (event) => {\n    try {\n        loader.classList.remove(\"isInvisible\");\n        event.preventDefault();\n        gallery.innerHTML = \"\";\n        const query = (event.target.elements.query.value).split(\" \");\n        searchQuery = query.join(\"+\");\n        currentPage = 1;\n\n        if (searchQuery == \"\") {\n            alert(\"Fill out the search input!\");\n            loader.classList.add(\"isInvisible\");\n        }\n        const images = await getImages(searchQuery, currentPage);\n        if (searchQuery != \"\") {\n    \n            galleryMarkUp(images.hits);\n            loader.classList.add(\"isInvisible\");\n\n        }\n        if (images.hits == \"\") {\n            iziToast.show({\n                transitionIn: 'fadeInLeft',\n                transitionOut: 'fadeOutRight',\n                position: 'topRight',\n                messageColor: 'white',\n                backgroundColor: 'rgba(255, 110, 110, 1)',\n                message: 'Sorry, there are no images matching your search query. Please try again!'\n            })\n        }  \n\n    }  catch (error) {\n        console.log(error);\n  }\n});\n\n\n\n\n"],"names":["getImages","searchQuery","currentPage","response","error","galleryMarkUp","images","markup","webformatURL","tags","largeImageURL","likes","views","comments","downloads","gallery","lightbox","SimpleLightbox","searchform","loader","event","iziToast"],"mappings":"6vBAAe,eAAeA,EAAUC,EAAaC,EAAa,CAO/D,OAAO,MAAM,qEAA4BD,CAAW,SAASC,CAAW,sEAAmG,EACrK,KAAKC,GAAY,CACd,GAAI,CAACA,EAAS,GACd,MAAM,IAAI,MAAM,cAAc,EAE9B,OAAOA,EAAS,KAAM,CAClC,CAAS,EACA,MAAMC,GAAS,CACZ,MAAM,2CAA2C,CAC7D,CAAS,CACT,CCfe,SAASC,EAAcC,EAAQ,CAC1C,MAAMC,EAAQD,EACT,IACG,CAAC,CAAE,aAAAE,EAAc,KAAAC,EAAM,cAAAC,EAAe,MAAAC,EAAO,MAAAC,EAAO,SAAAC,EAAU,UAAAC,KACpD;AAAA,mDAC6BJ,CAAa;AAAA;AAAA,+BAEjCF,CAAY;AAAA;AAAA,+BAEZC,CAAI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CAMWE,CAAK;AAAA;AAAA;AAAA;AAAA,8CAILC,CAAK;AAAA;AAAA;AAAA;AAAA,8CAILC,CAAQ;AAAA;AAAA;AAAA;AAAA,8CAIRC,CAAS;AAAA;AAAA;AAAA;AAAA,sBAKpD,EAAE,KAAK,EAAE,EACRC,EAAQ,mBAAmB,YAAaR,CAAM,EAC9CS,EAAS,QAAO,CACpB,CC7BO,MAAMA,EAAW,IAAIC,EAAe,aAAc,CAAE,aAAc,KAAK,CAAE,EAE1EC,EAAa,SAAS,cAAc,OAAO,EAC3CC,EAAS,SAAS,cAAc,SAAS,EAClCJ,EAAU,SAAS,cAAc,UAAU,EAExD,IAAIb,EACAD,EAEJiB,EAAW,iBAAiB,SAAU,MAAOE,GAAU,CACnD,GAAI,CACAD,EAAO,UAAU,OAAO,aAAa,EACrCC,EAAM,eAAc,EACpBL,EAAQ,UAAY,GAEpBd,EADemB,EAAM,OAAO,SAAS,MAAM,MAAO,MAAM,GAAG,EACvC,KAAK,GAAG,EAC5BlB,EAAc,EAEVD,GAAe,KACf,MAAM,4BAA4B,EAClCkB,EAAO,UAAU,IAAI,aAAa,GAEtC,MAAMb,EAAS,MAAMN,EAAUC,EAAaC,CAAW,EACnDD,GAAe,KAEfI,EAAcC,EAAO,IAAI,EACzBa,EAAO,UAAU,IAAI,aAAa,GAGlCb,EAAO,MAAQ,IACfe,EAAS,KAAK,CACV,aAAc,aACd,cAAe,eACf,SAAU,WACV,aAAc,QACd,gBAAiB,yBACjB,QAAS,0EACzB,CAAa,CAGR,OAASjB,EAAO,CACb,QAAQ,IAAIA,CAAK,CACtB,CACH,CAAC"}